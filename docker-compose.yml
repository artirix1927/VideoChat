version: "3.9"

services:
  video_service:
    build: ./video_service
    container_name: video_service
    ports:
      - "8001:8001"
    restart: unless-stopped

  auth_service:
    build: ./auth_service
    container_name: auth_service
    restart: unless-stopped
    ports:
      - "8002:8002"
    depends_on:
      - rabbitmq
    volumes:
      - ./auth_service/auth_service/db.sqlite3:/app/auth_service/db.sqlite3
    environment:
      - SQLALCHEMY_DATABASE_URL=sqlite+aiosqlite:////app/auth_service/db.sqlite3
    

  two_factor_consumer:
    build: ./auth_service
    container_name: two_factor_consumer
    command: ["python", "auth_service/infrastructure/messaging/consumers/two_factor.py"]
    depends_on:
      - rabbitmq
    restart: unless-stopped
    environment:
      - SQLALCHEMY_DATABASE_URL=sqlite+aiosqlite:////app/auth_service/db.sqlite3

  signaling_service:
    build: ./signaling_service
    container_name: signaling_service
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      - rabbitmq

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_SIGNALING_URL=ws://localhost:8000/ws/signaling
      - NEXT_PUBLIC_VIDEO_API=http://video_service:8001
      - NEXT_PUBLIC_AUTH_API=http://auth_service:8002
    depends_on:
      - video_service
      - auth_service
      - signaling_service
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     # AMQP protocol
      - "15672:15672"   # Web management UI
    restart: unless-stopped
